networks:
  app-tier:
    driver: bridge

services:
  etcd:
    image: 'bitnami/etcd:latest'
    container_name: etcd
    restart: always
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - 2379:2379
      - 2380:2380
    networks:
      - app-tier
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: MOCK_SECRET_KEY_ID
      MONGO_INITDB_ROOT_PASSWORD: MOCK_SECRET_KEY_VALUE
    ports:
      - "27017:27017"
    volumes:
      - '.dbdata/mongo:/data/db'
    networks:
      - app-tier
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: MOCK_SECRET_KEY_ID
      ME_CONFIG_MONGODB_ADMINPASSWORD: MOCK_SECRET_KEY_VALUE
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: "27017"
    ports:
      - "28017:8081"
    depends_on:
      - mongodb
    networks:
      - app-tier
  redis:
    image: 'bitnami/redis:latest'
    container_name: redis
    restart: always
    user: root
    environment:
      - REDIS_PASSWORD=noy
      # - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - 6379:6379
    volumes:
      - '.dbdata/redis:/bitnami/redis'
    networks:
      - app-tier
  yapr:
    image: 'noy/yapr:latest'
    container_name: test-1
    restart: always
    ports:
      - 18080:8080
      - 19090:9090
    volumes:
      - './config.yaml:/app/config.yaml'
    command: ./yapr --name=test1 --addr=test-1:9090 --httpAddr=:8080
    depends_on:
      - etcd
      - redis
    networks:
      - app-tier
  # ---------- monitor ----------
  prometheus:
    image: 'prom/prometheus'
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml'
    networks:
      - app-tier
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    user: '0'
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-data:/var/lib/grafana
      - ./grafana-conf:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - app-tier
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - app-tier
  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    restart: always
    ports:
      - "9121:9121"
    command:
      - '--redis.addr=redis://:noy@redis:6379'
    networks:
      - app-tier
  # cadvisor:
  #   image: google/cadvisor
  #   container_name: cadvisor
  #   restart: always
  #   ports:
  #     - "8081:8080"
  #   volumes:
  #     - '/:/rootfs:ro'
  #     - '/var/run:/var/run:rw'
  #     - '/sys:/sys:ro'
  #     - '/var/lib/docker/:/var/lib/docker:ro'
  #   networks:
  #     - app-tier